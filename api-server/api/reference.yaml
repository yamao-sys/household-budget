openapi: 3.1.0
info:
  title: household budget
  version: '1.0'
  summary: ''
  description: household budget APIs
servers:
  - url: 'http://localhost:8080'
paths:
  /csrf:
    get:
      summary: Get Csrf
      responses:
        '200':
          $ref: '#/components/responses/CsrfResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
      operationId: get-csrf
      security: []
      tags:
        - csrf
  /users/validateSignUp:
    post:
      summary: User Validate SignUp
      responses:
        '200':
          $ref: '#/components/responses/UserSignUpResponse'
        '400':
          $ref: '#/components/responses/UserSignUpResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
      operationId: post-users-validate_sign_up
      security: []
      requestBody:
        $ref: '#/components/requestBodies/UserSignUpInput'
      tags:
        - users
  /users/signUp:
    post:
      summary: User SignUp
      responses:
        '200':
          $ref: '#/components/responses/UserSignUpResponse'
        '400':
          $ref: '#/components/responses/UserSignUpResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
      operationId: post-users-sign_up
      security: []
      requestBody:
        $ref: '#/components/requestBodies/UserSignUpInput'
      tags:
        - users
  /users/signIn:
    post:
      summary: User SignIn
      responses:
        '200':
          $ref: '#/components/responses/UserSignInOkResponse'
        '400':
          $ref: '#/components/responses/UserSignInBadRequestResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
      operationId: post-users-sign_in
      security: []
      requestBody:
        $ref: '#/components/requestBodies/UserSignInInput'
      tags:
        - users
  /users/checkSignedIn:
    get:
      summary: User CheckSignedIn
      responses:
        '200':
          description: is signed in
          content:
            application/json:
              schema:
                type: object
                required:
                  - isSignedIn
                properties:
                  isSignedIn:
                    type: boolean
      operationId: get-users-check_signed_in
      security:
        - authentication: []
      tags:
        - users
  /expenses:
    get:
      summary: Get Expenses
      tags:
        - expenses
      responses:
        '200':
          $ref: '#/components/responses/FetchExpenseListsResponse'
      operationId: get-expenses
      security:
        - authentication: []
      parameters:
        - schema:
            type: string
          in: query
          name: fromDate
          description: 取得対象の日付FROM
        - schema:
            type: string
          in: query
          name: toDate
          description: 取得対象の日付TO
    post:
      summary: Post Expense
      tags:
        - expenses
      responses:
        '200':
          $ref: '#/components/responses/StoreExpenseResponse'
      operationId: post-expenses
      security:
        - authentication: []
      requestBody:
        $ref: '#/components/requestBodies/StoreExpenseInput'
  /expenses/totalAmounts:
    get:
      summary: Get Expenses TotalAmounts
      tags:
        - expenses
      responses:
        '200':
          $ref: '#/components/responses/TotalAmountListsResponse'
      operationId: get-expenses-total-amounts
      security:
        - authentication: []
      parameters:
        - schema:
            type: string
          in: query
          name: fromDate
          description: 取得対象の日付FROM
          required: true
        - schema:
            type: string
          in: query
          name: toDate
          description: 取得対象の日付TO
          required: true
  /expenses/categoryTotalAmounts:
    get:
      summary: Get Expenses Category TotalAmounts
      tags:
        - expenses
      responses:
        '200':
          $ref: '#/components/responses/CategoryTotalAmountListsResponse'
      operationId: get-expenses-category-total-amounts
      security:
        - authentication: []
      parameters:
        - schema:
            type: string
          in: query
          name: fromDate
          description: 取得対象の日付FROM
          required: true
        - schema:
            type: string
          in: query
          name: toDate
          description: 取得対象の日付TO
          required: true
  /incomes:
    post:
      summary: POST Income
      tags:
        - incomes
      responses:
        '200':
          $ref: '#/components/responses/StoreIncomeResponse'
      operationId: post-incomes
      description: POST Income
      security:
        - authentication: []
      requestBody:
        $ref: '#/components/requestBodies/StoreIncomeInput'
components:
  schemas:
    UserSignUpValidationError:
      title: UserSignUpValidationError
      type: object
      properties:
        name:
          type: array
          items:
            type: string
        email:
          type: array
          items:
            type: string
        password:
          type: array
          items:
            type: string
    TotalAmountLists:
      title: TotalAmountLists
      type: object
      required:
        - date
        - extendProps
      properties:
        date:
          type: string
          format: date
        extendProps:
          type: object
          required:
            - type
            - totalAmount
          properties:
            type:
              type: string
            totalAmount:
              type: integer
      description: Total Amount Lists
    CategoryTotalAmountLists:
      title: CategoryTotalAmountLists
      type: object
      required:
        - category
        - totalAmount
      properties:
        category:
          type: integer
        totalAmount:
          type: integer
      description: Total Amount Lists
    ExpenseLists:
      title: ExpenseLists
      type: object
      required:
        - expenses
      properties:
        expenses:
          type: array
          items:
            $ref: '#/components/schemas/Expense'
      description: Monthly Calender Expense
    StoreExpenseValidationError:
      title: StoreExpenseValidationError
      type: object
      properties:
        paidAt:
          type: array
          items:
            type: string
        amount:
          type: array
          items:
            type: string
        category:
          type: array
          items:
            type: string
        description:
          type: array
          items:
            type: string
    Expense:
      title: Expense
      type: object
      required:
        - id
        - paidAt
        - amount
        - category
        - description
      properties:
        id:
          type: string
        paidAt:
          type: string
          format: date
        amount:
          type: integer
        category:
          type: integer
        description:
          type: string
      description: Expense
    Income:
      title: Income
      x-stoplight:
        id: yskgst9zjw0q0
      type: object
      description: Income
      required:
        - id
        - receivedAt
        - amount
        - clientName
      properties:
        id:
          type: string
        receivedAt:
          type: string
          format: date
        amount:
          type: integer
        clientName:
          type: string
    StoreIncomeValidationError:
      title: StoreIncomeValidationError
      type: object
      description: Store Income Validation Error
      properties:
        receivedAt:
          type: array
          items:
            type: string
        amount:
          type: array
          items:
            type: string
        clientName:
          type: array
          items:
            type: string
  requestBodies:
    UserSignUpInput:
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - email
              - password
            properties:
              name:
                type: string
              email:
                type: string
              password:
                type: string
      description: User SignUp Iuput
    UserSignInInput:
      content:
        application/json:
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      description: User SignIn  Input
    StoreExpenseInput:
      content:
        application/json:
          schema:
            type: object
            required:
              - paidAt
              - amount
              - category
              - description
            properties:
              paidAt:
                type: string
                format: date
              amount:
                type: integer
              category:
                type: integer
              description:
                type: string
      description: Store Expense Input
    StoreIncomeInput:
      content:
        application/json:
          schema:
            type: object
            required:
              - receivedAt
              - amount
              - clientName
            properties:
              receivedAt:
                type: string
                format: date
              amount:
                type: integer
              clientName:
                type: string
      description: Store Income Input
  responses:
    CsrfResponse:
      description: Csrf response
      content:
        application/json:
          schema:
            type: object
            required:
              - csrfToken
            properties:
              csrfToken:
                type: string
    UserSignUpResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            required:
              - code
              - errors
            properties:
              code:
                type: integer
              errors:
                type: object
                $ref: '#/components/schemas/UserSignUpValidationError'
    UserSignInOkResponse:
      description: User SignIn Response
      content:
        application/json:
          schema:
            type: object
      headers:
        Set-Cookie:
          schema:
            type: string
    UserSignInBadRequestResponse:
      description: User SignIn BadRequest Response
      content:
        application/json:
          schema:
            type: object
            required:
              - errors
            properties:
              errors:
                type: array
                items:
                  type: string
    FetchExpenseListsResponse:
      description: Fetch Expense Lists Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExpenseLists'
    TotalAmountListsResponse:
      description: Total Amount Lists Response
      content:
        application/json:
          schema:
            type: object
            required:
              - totalAmounts
            properties:
              totalAmounts:
                type: array
                items:
                  $ref: '#/components/schemas/TotalAmountLists'
    CategoryTotalAmountListsResponse:
      description: Category Total Amount Lists Response
      content:
        application/json:
          schema:
            type: object
            required:
              - totalAmounts
            properties:
              totalAmounts:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryTotalAmountLists'
    StoreExpenseResponse:
      description: Store Expense Response
      content:
        application/json:
          schema:
            type: object
            required:
              - expense
              - errors
            properties:
              expense:
                $ref: '#/components/schemas/Expense'
              errors:
                $ref: '#/components/schemas/StoreExpenseValidationError'
    StoreIncomeResponse:
      description: Store Income Response
      content:
        application/json:
          schema:
            type: object
            required:
              - income
              - errors
            properties:
              income:
                $ref: '#/components/schemas/Income'
              errors:
                $ref: '#/components/schemas/StoreIncomeValidationError'
    InternalServerErrorResponse:
      description: Internal Server Error Response
      content:
        application/json:
          schema:
            type: object
            required:
              - code
              - message
            properties:
              code:
                type: integer
                format: int64
              message:
                type: string
  securitySchemes:
    authentication:
      name: token
      type: apiKey
      in: cookie
tags:
  - name: csrf
    description: csrf endpoint
  - name: users
    description: users endpoint
  - name: expenses
    description: expenses endpoint
  - name: incomes
    description: incomes endpoint
